"use strict";(self.webpackChunku_modeler_manual=self.webpackChunku_modeler_manual||[]).push([[8637],{3905:(e,t,n)=>{n.d(t,{Zo:()=>g,kt:()=>p});var i=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=i.createContext({}),d=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},g=function(e){var t=d(e.components);return i.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,g=s(e,["components","mdxType","originalType","parentName"]),c=d(n),h=o,p=c["".concat(l,".").concat(h)]||c[h]||m[h]||a;return n?i.createElement(p,r(r({ref:t},g),{},{components:n})):i.createElement(p,r({ref:t},g))}));function p(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=h;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:o,r[1]=s;for(var d=2;d<a;d++)r[d]=n[d];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},52991:(e,t,n)=>{n.d(t,{Z:()=>b});var i=n(67294),o=n(86010),a=n(53438),r=n(39960),s=n(13919),l=n(95999);const d="cardContainer_fWXF",g="cardTitle_rnsV",c="cardDescription_PWke";function m(e){let{href:t,children:n}=e;return i.createElement(r.Z,{href:t,className:(0,o.Z)("card padding--lg",d)},n)}function h(e){let{href:t,icon:n,title:a,description:r}=e;return i.createElement(m,{href:t},i.createElement("h2",{className:(0,o.Z)("text--truncate",g),title:a},n," ",a),r&&i.createElement("p",{className:(0,o.Z)("text--truncate",c),title:r},r))}function p(e){let{item:t}=e;const n=(0,a.Wl)(t);return n?i.createElement(h,{href:n,icon:"\ud83d\uddc3\ufe0f",title:t.label,description:t.description??(0,l.I)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:t.items.length})}):null}function u(e){let{item:t}=e;const n=(0,s.Z)(t.href)?"\ud83d\udcc4\ufe0f":"\ud83d\udd17",o=(0,a.xz)(t.docId??void 0);return i.createElement(h,{href:t.href,icon:n,title:t.label,description:t.description??o?.description})}function k(e){let{item:t}=e;switch(t.type){case"link":return i.createElement(u,{item:t});case"category":return i.createElement(p,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function f(e){let{className:t}=e;const n=(0,a.jA)();return i.createElement(b,{items:n.items,className:t})}function b(e){const{items:t,className:n}=e;if(!t)return i.createElement(f,e);const r=(0,a.MN)(t);return i.createElement("section",{className:(0,o.Z)("row",n)},r.map(((e,t)=>i.createElement("article",{key:t,className:"col col--6 margin-bottom--lg"},i.createElement(k,{item:e})))))}},88627:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>g});var i=n(87462),o=(n(67294),n(3905)),a=n(52991);const r={slug:"/rigging/guide",sidebar_position:1},s="Rigging Mode Guide",l={unversionedId:"editable-mesh/rigging-mode/rigging-guide",id:"editable-mesh/rigging-mode/rigging-guide",title:"Rigging Mode Guide",description:"Rigging Mode Guide",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/editable-mesh/rigging-mode/rigging-guide.md",sourceDirName:"editable-mesh/rigging-mode",slug:"/rigging/guide",permalink:"/docs/rigging/guide",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{slug:"/rigging/guide",sidebar_position:1},sidebar:"docs",previous:{title:"Rigging Mode",permalink:"/docs/rigging-mode"},next:{title:"Weight Tool",permalink:"/docs/rigging/weight-tool"}},d={},g=[{value:"<strong>What is Rigging?</strong>",id:"what-is-rigging",level:2},{value:"<strong>Why do we need rigging?</strong>",id:"why-do-we-need-rigging",level:2},{value:"<strong>Step-by-step rigging process</strong>",id:"step-by-step-rigging-process",level:2},{value:"1. Prepare a UModeler X object that has been modeled and UV unwrapped",id:"1-prepare-a-umodeler-x-object-that-has-been-modeled-and-uv-unwrapped",level:3},{value:"2. Enter Rigging Mode",id:"2-enter-rigging-mode",level:3},{value:"3. Create Bones",id:"3-create-bones",level:3},{value:"4. Proceed with Skinning",id:"4-proceed-with-skinning",level:3},{value:"5. Checking the Results",id:"5-checking-the-results",level:3}],c={toc:g};function m(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,i.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"rigging-mode-guide"},"Rigging Mode Guide"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Rigging Mode Guide",src:n(28222).Z,width:"2447",height:"887"})),(0,o.kt)("p",null,"The ",(0,o.kt)("strong",{parentName:"p"},"Rigging Mode")," in ",(0,o.kt)("strong",{parentName:"p"},"UModeler X")," is a mode that allows you to add, edit, and skinned bones for animation.\nIn this mode, you can assign weights to vertices and edit weights to implement the movement of your model."),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"what-is-rigging"},(0,o.kt)("strong",{parentName:"h2"},"What is Rigging?")),(0,o.kt)("p",null,"Rigging is the process of creating a ",(0,o.kt)("strong",{parentName:"p"},"skeleton")," for a 3D model, and setting up how the model ",(0,o.kt)("strong",{parentName:"p"},"deforms")," as the skeleton moves. This process uses a weighting concept called ",(0,o.kt)("strong",{parentName:"p"},"Weights")," to determine how much the vertices reflect the movement of the bones."),(0,o.kt)("p",null,"In a nutshell, rigging is the process of giving a 3D model a bone that allows it to animate, and connecting the vertices so that when the bone moves, the vertices move together based on their weight values."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("h2",{parentName:"admonition",id:"weights"},(0,o.kt)("strong",{parentName:"h2"},"Weights")),(0,o.kt)("p",{parentName:"admonition"},"In Rigging Mode, ",(0,o.kt)("strong",{parentName:"p"},"Weight")," stands for ",(0,o.kt)("strong",{parentName:"p"},"Weighted"),", and is a weight value that determines how much of the bone's movement is reflected in the vertices.\n",(0,o.kt)("img",{alt:"Rigging Mode Weight",src:n(13178).Z,width:"2379",height:"1015"})),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},"From left, weight values are 0.0, 0.5, 1.0")),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("strong",{parentName:"p"},"The values range from 0.0 to 1.0"),", where 0.0 means that the bone's movement will not affect that vertex at all, and 1.0 means that the bone's movement will completely affect that vertex. This allows you to control the movement of your 3D model.")),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"why-do-we-need-rigging"},(0,o.kt)("strong",{parentName:"h2"},"Why do we need rigging?")),(0,o.kt)("p",null,"Without rigging, your 3D model will only exist in a static state, meaning it will be like an immobile statue."),(0,o.kt)("p",null,"Rigging gives you the flexibility to move characters or objects that need to move, allowing you to create animations."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("h2",{parentName:"admonition",id:"static-and-skinned-meshes"},(0,o.kt)("strong",{parentName:"h2"},"Static and Skinned Meshes")),(0,o.kt)("p",{parentName:"admonition"},"When you create and use 3D models in Unity, you use two types of meshes."),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("strong",{parentName:"p"},"Static Meshes:"),"\nA ",(0,o.kt)("strong",{parentName:"p"},"Static Mesh")," is an object that does not deform, meaning it is a mesh that does not animate. They are primarily used for non-moving objects such as backgrounds, buildings, and furniture."),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},'Of course, the "universal" use of Static Meshes is for furniture and buildings, but if you need deformation within the object, you can create a Skinned Mesh. ')),(0,o.kt)("p",{parentName:"admonition"},(0,o.kt)("strong",{parentName:"p"},"Skinned Meshes:"),"\nA ",(0,o.kt)("strong",{parentName:"p"},"Skinned Mesh")," is a 3D model that can be rigged and animated. They are used for moving objects such as characters and animals. Skinned meshes are connected so that their vertices move using bones and weight values, allowing them to be animated."),(0,o.kt)("admonition",{parentName:"admonition",type:"tip"},(0,o.kt)("h2",{parentName:"admonition",id:"how-to-identify-static-and-skinned-meshes-in-unity"},(0,o.kt)("strong",{parentName:"h2"},"How to identify Static and Skinned Meshes in Unity")),(0,o.kt)("ol",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ol"},"select your 3D model."),(0,o.kt)("li",{parentName:"ol"},"When selected, the Inspector window displays the model's information.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"If you have a ",(0,o.kt)("strong",{parentName:"li"},"Mesh Filter component")," and a ",(0,o.kt)("strong",{parentName:"li"},"Mesh Renderer component"),":\n",(0,o.kt)("img",{alt:"Static Mesh",src:n(96600).Z,width:"977",height:"483"}),(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"This is a Static Mesh."),(0,o.kt)("li",{parentName:"ol"},"These two components are responsible for the mesh's information and settings for rendering."))),(0,o.kt)("li",{parentName:"ul"},"If you have a ",(0,o.kt)("strong",{parentName:"li"},"Skinned Mesh Renderer component"),":\n",(0,o.kt)("img",{alt:"Skinned Mesh",src:n(91451).Z,width:"967",height:"580"}),(0,o.kt)("ol",{parentName:"li"},(0,o.kt)("li",{parentName:"ol"},"This is a Skinned Mesh."),(0,o.kt)("li",{parentName:"ol"},"This component supports animation and has the ability to deform the mesh based on bone and weight values.")))))),(0,o.kt)("p",{parentName:"admonition"},"This is how we distinguish and identify Static and Skinned Meshes in Unity."))),(0,o.kt)("hr",null),(0,o.kt)("h2",{id:"step-by-step-rigging-process"},(0,o.kt)("strong",{parentName:"h2"},"Step-by-step rigging process")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Prepare a UModeler X object that has been ",(0,o.kt)("strong",{parentName:"li"},"modeled")," and ",(0,o.kt)("strong",{parentName:"li"},"UV unwrapped"),"."),(0,o.kt)("li",{parentName:"ol"},"Enter ",(0,o.kt)("strong",{parentName:"li"},"Rigging Mode"),"."),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Create a bone.")),(0,o.kt)("li",{parentName:"ol"},"Skinning it using the weight-related tools."),(0,o.kt)("li",{parentName:"ol"},"Move or animate the bones to ",(0,o.kt)("strong",{parentName:"li"},"see the results"),".")),(0,o.kt)("p",null,"Below is a description of each sequence."),(0,o.kt)("h3",{id:"1-prepare-a-umodeler-x-object-that-has-been-modeled-and-uv-unwrapped"},"1. Prepare a UModeler X object that has been modeled and UV unwrapped"),(0,o.kt)("p",null,"Modeling and UV unwrap are essential steps to complete before rigging. Modeling is the process of creating the shape of the 3D model, and UV unwrap is the process of correctly mapping textures to the surface of the 3D model. Only after these two processes are completed can the model be rigged."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Check out the documentation below to learn about modeling modes and the UV Editor.")),(0,o.kt)(a.Z,{items:[{type:"link",label:"Modeling Mode",href:"/docs/modeling-mode"},{type:"link",label:"UV Editor",href:"/docs/uv-editor"}],mdxType:"DocCardList"}),(0,o.kt)("h3",{id:"2-enter-rigging-mode"},"2. Enter Rigging Mode"),(0,o.kt)("p",null,"Once modeling and UV unwrap is complete, enter Rigging Mode. Rigging mode provides various tools for rigging, such as creating bones and editing weights."),(0,o.kt)("h3",{id:"3-create-bones"},"3. Create Bones"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Bones")," act as a skeleton to control the movement of a 3D model. In the process of creating bones, you need to set the position of the bones and the connection structure between them."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"UModeler X")," provides the ",(0,o.kt)("strong",{parentName:"p"},"Build Bones tool")," to facilitate this process. With this tool, you can quickly configure the connection structure of the bones in the desired form."),(0,o.kt)(a.Z,{items:[{type:"link",label:"Build Bones Tool",href:"/docs/rigging/build-bones-tool"}],mdxType:"DocCardList"}),(0,o.kt)("p",null,"We also provide an ",(0,o.kt)("strong",{parentName:"p"},"Edit Bones Tool")," that allows you to make edits, such as modifying or adding bones that have already been created."),(0,o.kt)(a.Z,{items:[{type:"link",label:"Edit Bones Tool",href:"/docs/rigging/edit-bones-tool"}],mdxType:"DocCardList"}),(0,o.kt)("h3",{id:"4-proceed-with-skinning"},"4. Proceed with Skinning"),(0,o.kt)("p",null,"Skinning is the process of associating bones with vertices. In this process, we assign a weight to each vertex to determine how much the movement of the bone will affect that vertex."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You can accomplish this process by using the Edit Weights tool. The following tools are available for editing weights.")),(0,o.kt)(a.Z,{items:[{type:"link",label:"Weight Tool",href:"/docs/rigging/weight-tool"},{type:"link",label:"Weight Brush Tool",href:"/docs/rigging/weight-brush-tool"}],mdxType:"DocCardList"}),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Here's a tool to assign weights automatically or to make it quick and easy.")),(0,o.kt)(a.Z,{items:[{type:"link",label:"Weight Transfer Tool",href:"/docs/rigging/weight-transfer-tool"},{type:"link",label:"Auto Weight Tool",href:"/docs/rigging/auto-weight-tool"},{type:"link",label:"Envelope Tool",href:"/docs/rigging/envelope-tool"}],mdxType:"DocCardList"}),(0,o.kt)("h3",{id:"5-checking-the-results"},"5. Checking the Results"),(0,o.kt)("p",null,"The final step in rigging is to move or animate the bones to see the results. This step allows you to verify that the rigging was done correctly and that the desired movement was achieved."),(0,o.kt)("p",null,"If you didn't get the results you wanted, you can modify the structure or weights of the bones to achieve the desired results."),(0,o.kt)("div",{class:"video-container"},(0,o.kt)("iframe",{src:"https://www.youtube-nocookie.com/embed/OBA2s1qbEV4",frameborder:"0",allowfullscreen:""})))}m.isMDXComponent=!0},28222:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/Rigging_Guide-b7d550fec1e13e826875b4155741e9d5.png"},91451:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/Rigging_Guide_Skinned-9ee141a032c571b5f0c2ba4e5eae55df.png"},96600:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/Rigging_Guide_Static-63b3f19aadaa63fd2a3eac4e9fcf4982.png"},13178:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/Rigging_Guide_Weight-e61f74c27392a08e5b50dc18bd34bae3.png"}}]);